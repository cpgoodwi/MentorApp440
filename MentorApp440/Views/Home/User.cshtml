@using MentorApp440.Session
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MentorApp440.Helpers
@*
    ViewData:
    - Title is just the title of the page
    - UserId is the username or Id of the user
    - ViewUser is used to select which profile is being viewed
    
    // TODO: change this to use ViewContext instead of passing session state as view data
*@

@{
    /*// If the viewer is viewing their other profile, the title is "{Username} - Profile", else they're viewing themselves then title is "Dashboard"
    if (!(ViewData["UserId"] as string).Equals(ViewData["ViewUser"] as string))
        ViewData["Title"] = $"{ViewData["ViewUser"]} - Profile";
    else
        ViewData["Title"] = "Dashboard";*/

    // var user = new User(1, ViewData["ViewUser"] as string);

    var currUser = ViewContext.HttpContext.Session.Get<string>(SessionVariables._Username);
    var loggedIn = !string.IsNullOrWhiteSpace(currUser);
    // var viewUser = new User(ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId), ViewContext.HttpContext.Session.Get<string>(SessionVariables._Viewing));
    var viewUser = SqlConnection.ConstructUserFromDatabase(ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId), ViewContext.HttpContext.Session.Get<string>(SessionVariables._Viewing));
    var viewSelf = currUser.Equals(viewUser.Username);
    
    if (!(currUser.Equals(viewUser.Username)))
        ViewData["Title"] = $"{viewUser.Username} - Profile";
    else
        ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="~/css/User.css" asp-append-version="true"/>

<nav class="navbar  sticky-top navbar-light" id="navBar">
    <div class="container">
        <a class="navbar-brand" href="#" id="flomentoTitle">Flomento</a>
        <ul class="navbar-nav list-group-horizontal">
            @if (loggedIn)
            {
                if (viewSelf)
                {
                    <li class="nav-item offset-1">
                        <a class="nav-link navBarLinks" asp-controller="Home" asp-action="LogOut" style="color: white;">LogOut</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link navBarLinks" asp-controller="Home" asp-action="ToDashboard" style="color: white;">Dashboard</a>
                    </li>
                }
            } @* TODO: else add log in pop up toggle? *@
        </ul>
    </div>
</nav>

<div class="container mt-5">
    <div class="row align-items-center">
        <div class="col-7">
            <img src="~/lib/Images/Profile.jpeg" class="img-thumbnail" id="profilePic" alt="" width="150px" height="150px"/>
            <div id="profileInfo">
                <h1 class="offset-3">@viewUser.Name</h1>
                <h6 class="offset-3">@viewUser.Desc</h6>
            </div>
        </div>
        <div class="col-1">&nbsp;</div>
        
        @if (loggedIn)
        {
            if (viewSelf)
            {
                <div class="col-4 d-grid gap-2">
                    <button type="button" class="btn" id="editButton">Edit Profile</button>
                </div>
            }
            else
            {
                <div class="col-4 d-grid gap-2">
                    <button type="button" class="btn" id="msgButton">Message (NYI)</button>
                </div>
            }
        }
    </div>

    @* Goals row *@
    <div class="row py-3">
        <div class="col-7 bg-light dash" style="border-radius: 0.5rem;">

            <p class="h1 text-center text-primary">
                <i class="fas fa-check-square me-1"></i>
                <u>Goals</u> @* what is a <u> element? *@
            </p>
            @* allow user to add new goals to self if on their own profile *@
            @if (viewSelf)
            {
                <div class="pb-1">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex flex-row align-items-center">
                                <textarea type="text" class="form-control form-control-md" id="exampleFormControlInput1" rows="1"
                                      placeholder="Add new..."></textarea>
                                <a href="#!" data-mdb-toggle="tooltip" title="Set due date">
                                    <i class="fas fa-calendar-alt fa-lg me-3"></i>
                                </a>
                                <div>
                                    <button type="button" class="btn btn-primary">Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <hr class="my-4">

            <!-- Tabs navs -->
            <ul class="nav nav-tabs mb-4 pb-2" id="ex1" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="ex1-tab-1" data-mdb-toggle="tab" href="#ex1-tabs-1" role="tab"
                       aria-controls="ex1-tabs-1" aria-selected="true">All</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="ex1-tab-2" data-mdb-toggle="tab" href="#ex1-tabs-2" role="tab"
                       aria-controls="ex1-tabs-2" aria-selected="false">Active</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="ex1-tab-3" data-mdb-toggle="tab" href="#ex1-tabs-3" role="tab"
                       aria-controls="ex1-tabs-3" aria-selected="false">Completed</a>
                </li>
            </ul>
            <!-- Tabs navs -->
            <ul id="goalListId">
                @foreach (var goal in viewUser.ListGoals()) // iterate through ViewUser's goal list
                {
                    // TODO: fix id and names for items so they can be functional, also add them to task list
                    <li>
                        <input type="checkbox" id="goalcheck"/>
                        <label for="goalcheck">@goal</label>
                    </li>
                }
            </ul>
        </div>

        <div class="col-1">&nbsp;</div>
        
        @* TODO: add styling to mentor section *@
        <div class="col-4">
            <div class="card" style="border-radius: 0.5rem;">
                <div class="card-header" id="mentor">
                    @if (viewUser.HasMentor())
                    {
                        <a asp-controller="Home" asp-action="SelectUser" asp-route-username="@viewUser.GetMentorId()" style="color: white;">@viewUser.GetMentorName()</a>
                    }
                    else
                    {
                        <p>user has no mentor</p>
                    }
                </div>
                <div class="card-body">
                    <ul class="card-text">
                        <li>Peer</li>
                        <li>Peer</li>
                        <li>Peer</li>
                    </ul>
                </div>
            </div>
            <div class="py-3">
                <h3>Goals</h3>
                <div class="progress bar">
                    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                </div>
            </div>
            @* <div> *@
                <h3>Tasks</h3>
                <div class="progress bar">
                    <div class="progress-bar" role="progressbar" style="width: 75%;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>
                </div>
            @* </div> *@
        </div>
    </div>


    @* Task row *@
    <div class="row py-3">
        <div class="col-7 bg-light dash" style="border-radius: 0.5rem;">
            <p class="h1 text-center text-primary">
                <i class="fas fa-check-square me-1"></i>
                <u>Tasks</u>
            </p>
            @if (viewUser.IsMentee(currUser))
            {
                <div class="pb-1">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex flex-row align-items-center">
                                <textarea type="text" class="form-control form-control-md" id="exampleFormControlInput1" rows="1"
                                      placeholder="Add new..."></textarea>
                                <a href="#!" data-mdb-toggle="tooltip" title="Set due date">
                                    <i class="fas fa-calendar-alt fa-lg me-3"></i>
                                </a>
                                <div>
                                    <button type="button" class="btn btn-primary">Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <hr class="my-4">

            <!-- Tabs navs -->
            <ul class="nav nav-tabs mb-4 pb-2" id="ex1" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="ex1-tab-1" data-mdb-toggle="tab" href="#ex1-tabs-1" role="tab"
                       aria-controls="ex1-tabs-1" aria-selected="true">All</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="ex1-tab-2" data-mdb-toggle="tab" href="#ex1-tabs-2" role="tab"
                       aria-controls="ex1-tabs-2" aria-selected="false">Active</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="ex1-tab-3" data-mdb-toggle="tab" href="#ex1-tabs-3" role="tab"
                       aria-controls="ex1-tabs-3" aria-selected="false">Completed</a>
                </li>
            </ul>
            <!-- Tabs navs -->

            <ul id="taskListId">
                @foreach (var task in viewUser.ListTasks()) // iterate through ViewUser's task list
                {
                    <li>
                        <input type="checkbox" id="taskcheck"/>
                        <label for="taskcheck">@task</label>
                    </li>

                    // load each incomplete one as a list item
                }
            </ul>
        </div>
        <div class="col-1">&nbsp;</div>
    </div>
</div>