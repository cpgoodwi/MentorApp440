@using MentorApp440.Session
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MentorApp440.Helpers
@using MentorApp440.Controllers
@using System.Diagnostics.Eventing.Reader

@{
    var currUser = ViewContext.HttpContext.Session.Get<string>(SessionVariables._Username);
    var loggedIn = !string.IsNullOrWhiteSpace(currUser);
    // var viewUser = new User(ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId), ViewContext.HttpContext.Session.Get<string>(SessionVariables._Viewing));
    var viewUser = SqlConnection.ConstructUserFromDatabase(ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId), ViewContext.HttpContext.Session.Get<string>(SessionVariables._Viewing));
    var viewSelf = currUser.Equals(viewUser.Username);
    
    // If the viewer is viewing their other profile, the title is "{Username} - Profile", else they're viewing themselves then title is "Dashboard"
    if (!(currUser.Equals(viewUser.Username)))
        ViewData["Title"] = $"{viewUser.Username} - Profile";
    else
        ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="~/css/User.css" asp-append-version="true"/>

@* <script type="text/javascript" src="js/Goal.js" async></script> *@
@* <script type="text/javascript" src="js/Task.js" async></script> *@
@* <script type="text/javascript" src="js/user.js" async></script> *@

@* TODO: make the nav bar part of _Layout.cshtml *@
<nav class="navbar  sticky-top navbar-light" id="navBar">
    <div class="container">
        <a class="navbar-brand" href="#" id="flomentoTitle">Flomento</a>
        <ul class="navbar-nav list-group-horizontal">
            @if (loggedIn)
            {
                if (viewSelf)
                {
                    <li class="nav-item offset-1">
                        <a class="nav-link navBarLinks" asp-controller="Home" asp-action="LogOut" style="color: white;">LogOut</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link navBarLinks" asp-controller="Home" asp-action="ToDashboard" style="color: white;">Dashboard</a>
                    </li>
                }
            } @* TODO: else add log in pop up toggle? *@
        </ul>
    </div>
</nav>

<div class="container mt-5">
    <div class="row align-items-center">
        <div class="col-7">
            <img src="~/lib/Images/Profile.jpeg" class="img-thumbnail" id="profilePic" alt="" width="150px" height="150px"/>
            <div id="profileInfo">
                <h1 class="offset-3">@viewUser.Name</h1>
                <h6 class="offset-3">@viewUser.Desc</h6>
            </div>
        </div>
        <div class="col-1">&nbsp;</div>
        
        @if (loggedIn)
        {
            if (viewSelf)
            {
                <div class="col-4 d-grid gap-2">
                    <button type="button" class="btn" id="editButton">Edit Profile</button>
                </div>
            }
            else
            {
                <div class="col-4 d-grid gap-2">
                    <button type="button" class="btn" id="msgButton">Message (NYI)</button>
                </div>
            }
        }
    </div>

    @* Goals row *@
    <div class="row py-3">
        <div class="col-7 bg-light dash" style="border-radius: 0.5rem;">

            <p class="h1 text-center text-primary">
                <i class="fas fa-check-square me-1"></i>
                <u>Goals</u> @* what is a <u> element? *@
            </p>
            @* allow user to add new goals to self if on their own profile *@
            @if (viewSelf)
            {
                <div class="pb-1">
                    <div class="card">
                        <div class="card-body">
                            <form class="d-flex flex-row align-items-center"
                                  asp-controller="API" asp-action="PostGoal" asp-route-memId="@viewUser.MemberId">
                                <textarea type="text" class="form-control form-control-md" id="goalStrTextArea" name="goalStr" rows="1"
                                      placeholder="Add new..."></textarea>
                                <a href="#!" data-mdb-toggle="tooltip" title="Set due date">
                                    <i class="fas fa-calendar-alt fa-lg me-3"></i>
                                </a>
                                <div>
                                    <button type="submit" class="btn btn-primary">Add</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }

            <hr class="my-4">

            <!-- Tabs navs -->
            <ul class="nav nav-tabs mb-4 pb-2" id="goalsNav" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="allGoals" data-mdb-toggle="tab" href="#goals-1" role="tab"
                       aria-controls="ex1-tabs-1" aria-selected="true">All</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="activeGoals" data-mdb-toggle="tab" href="#goals-2" role="tab"
                       aria-controls="ex1-tabs-2" aria-selected="false">Active</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="completeGoals" data-mdb-toggle="tab" href="#goals-3" role="tab"
                       aria-controls="ex1-tabs-3" aria-selected="false">Completed</a>
                </li>
            </ul>
            <!-- Tabs navs -->
            <fieldset @if (!viewSelf) { <text>disabled="disabled"</text> } onchange="goalChange()">
                <ul id="goalListId">
                    @* populate this list with goal items from database *@
                    @foreach (var goal in SqlConnection.GetGoalsFromMemberId(viewUser.MemberId))
                    {
                        <li>
                            <input type="checkbox" 
                                   id="goalcheck-@goal.GoalId" 
                                   @if (goal.IsComplete) { <text>checked</text> } 
                                   onchange="Goal.check(@goal.MemId, @goal.GoalId)" />
                            <label for="goalcheck-@goal.GoalId">@goal.GoalStr</label>
                        </li>
                    }
                </ul>
            </fieldset>
        </div>

        <div class="col-1">&nbsp;</div>
        
        @* TODO: add styling to mentor section *@
        <div class="col-4">
            <div class="card" style="border-radius: 0.5rem;">
                <div class="card-header" id="mentor">
                    @if (viewUser.HasMentor())
                    {
                        <a asp-controller="Home" asp-action="SelectUser" asp-route-username="@viewUser.GetMentorId()" style="color: white;">@viewUser.GetMentorName()</a>
                    }
                    else
                    {
                        if (viewSelf)
                        {
                            // TODO: implement finding a new mentor
                            <p>find new mentor</p>
                        }
                        else
                        {
                            <p>user has no mentor</p>
                        }
                    }
                </div>
                @* display peers *@
                <div id="currPeers" class="card-body">
                    <ul id="PeerList" class="card-text">
                        @foreach (var peer in SqlConnection.GetCurPeers(viewUser.MemberId, ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId)))
                        {
                            <li>
                                <a asp-controller="Home" asp-action="SelectUser" asp-route-username="@peer.Username">@peer.Fullname</a>
                            </li>
                        }
                    </ul>
                </div>
                @* display potential peers if at dashboard *@
                @if (viewSelf)
                {
                    <hr/>
                    <div id="potPeers" class="card-body">
                        <ul id="notPeerList" class="card-text">
                            @foreach (var peer in SqlConnection.GetPotPeers(viewUser.MemberId, ViewContext.HttpContext.Session.Get<int>(SessionVariables._OrgId)))
                            {
                                <li>
                                    <a asp-controller="Home" asp-action="SelectUser" asp-route-username="@peer.Username">@peer.Fullname</a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
            <div class="py-3">
                <h3>Goals</h3>
                <div class="progress bar">
                    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                </div>
            </div>
            @* <div> *@
            <h3>Tasks</h3>
            <div class="progress bar">
                <div class="progress-bar" role="progressbar" style="width: 75%;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">75%</div>
            </div>
            @* </div> *@
        </div>
    </div>


    @* Task row *@
    <div class="row py-3">
        <div class="col-7 bg-light dash" style="border-radius: 0.5rem;">
            <p class="h1 text-center text-primary">
                <i class="fas fa-check-square me-1"></i>
                <u>Tasks</u>
            </p>
            
            @if (viewUser.IsMentee(currUser))
            {
                <div class="pb-1">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex flex-row align-items-center">
                                <textarea type="text" class="form-control form-control-md" id="exampleFormControlInput1" rows="1"
                                      placeholder="Add new..."></textarea>
                                <a href="#!" data-mdb-toggle="tooltip" title="Set due date">
                                    <i class="fas fa-calendar-alt fa-lg me-3"></i>
                                </a>
                                <div>
                                    <button type="button" class="btn btn-primary">Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <hr class="my-4">

            <!-- Tabs navs -->
            <ul class="nav nav-tabs mb-4 pb-2" id="tasksNav" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="allTasks" data-mdb-toggle="tab" href="#tasks-1" role="tab"
                       aria-controls="ex1-tabs-1" aria-selected="true">All</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="activeTasks" data-mdb-toggle="tab" href="#tasks-2" role="tab"
                       aria-controls="ex1-tabs-2" aria-selected="false">Active</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="completeTasks" data-mdb-toggle="tab" href="#tasks-3" role="tab"
                       aria-controls="ex1-tabs-3" aria-selected="false">Completed</a>
                </li>
            </ul>
            <!-- Tabs navs -->

            <fieldset @if (!viewSelf) { <text>disabled="disabled"</text> } onchange="taskChange()">
                <ul id="taskListId">
                    @* populate this list with task items from database *@
                    @foreach (var task in SqlConnection.GetTasksFromMemberId(viewUser.MemberId))
                    {
                        <li>
                            <input type="checkbox" 
                                   id="taskcheck-@task.TaskId" 
                                   @if (task.IsComplete) { <text>checked</text> } 
                                   onchange="Goal.check(@task.MemId, @task.TaskId)" />
                            <label for="taskcheck-@task.TaskId">@task.TaskStr</label>
                        </li>
                    }
                </ul>
            </fieldset>
        </div>
        <div class="col-1">&nbsp;</div>
    </div>
</div>

@* <script type="text/javascript" src="~/js/Goal.js" asp-append-version="true" async></script> *@
@* <script type="text/javascript" src="~/js/Task.js" asp-append-version="true" async></script> *@
@* <script type="text/javascript" src="~/js/user.js" asp-append-version="true" defer></script> *@

@section Scripts
{
    <script type="text/javascript" src="~/js/Goal.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/js/Task.js" asp-append-version="true"></script>
    <script type="text/javascript" src="~/js/user.js" asp-append-version="true"></script>

    <script type="text/javascript">
    
    @*
    // load goals into a js array
    $.ajax({
        type:"GET",
        url: "@Url.Action("GetGoals", "API")",
        data: {
            memId: @viewUser.MemberId
        },
        dataType: "json",
        success: function (result) {
            // console.log("goals", result)
            // var userGoalList = result
            // result.forEach(pushGoal)
            // userGoalList = result
            loadGoals(result)
            
            // load tasks into a js array
            $.ajax({
                type:"GET",
                url: "@Url.Action("GetTasks", "API")",
                data: {
                    memId: @viewUser.MemberId
                },
                dataType: "json",
                success: function (result) {
                    // console.log("tasks", result)
                    // var userTaskList = result
                    // result.forEach(pushTask)
                    // userTaskList = result
                    loadTasks(result)
                },
                error: function (req, status, error) {
                    console.log(req)
                    console.log(status)
                    console.log(error)
                }
            })
        },
        error: function (req, status, error) {
            console.log(req)
            console.log(status)
            console.log(error)
        }
    })
    
    // const refreshData = () => {
        // load goals into js array, then ...
        $.ajax({
            type:"GET",
            url: "@Url.Action("GetGoals", "API")",
            data: {
                memId: @viewUser.MemberId
            },
            dataType: "json",
            success: function (result) {
                userGoalList = result
                
                // load tasks into a js array, then ...
                $.ajax({
                    type:"GET",
                    url: "@Url.Action("GetTasks", "API")",
                    data: {
                        memId: @viewUser.MemberId
                    },
                    dataType: "json",
                    success: function (result) {
                        userTaskList = result
                        
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("GetPeers", "API")",
                            data: {
                                memId: @viewUser.MemberId
                            },
                            dataType: "json",
                            success: function (result) {
                                console.log(result)
                                // console.log("from goals ajax", goalList)
                                // return result
                            },
                            error: function (req, status, error) {
                               console.log(req)
                               console.log(status)
                               console.log(error)
                           }
                        })
                    },
                    error: function (req, status, error) {
                        console.log(req)
                        console.log(status)
                        console.log(error)
                    }
                })
            },
            error: function (req, status, error) {
                console.log(req)
                console.log(status)
                console.log(error)
            }
        })
    // }
    
    const loadGoals = () => {
        let goalList
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetGoals", "API")",
            data: {
                memId: @viewUser.MemberId
            },
            dataType: "json",
            success: function (result) {
                goalList = result
                // console.log("from goals ajax", goalList)
                // return result
            }
        })
        return goalList
    }
    
    const loadTasks = () => {
        let taskList
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetTasks", "API")",
            data: {
                memId: @viewUser.MemberId
            },
            dataType: "json",
            success: function (result) {
                taskList = result
            }
        })
        return taskList
    }
    *@
    
    </script>

    @* <script type="text/javascript" src="~/js/user.js" asp-append-version="true" defer></script> *@
}
